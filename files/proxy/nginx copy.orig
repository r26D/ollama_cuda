events { worker_connections 2048; }

http {
    client_max_body_size 1024M;


    # invokeai
    server {
        listen 9091;

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:9090;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

    # Fast Stable Diffusion + web UI + Comfy UI
    server {
        listen 3001;

        location /ws {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;

            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        proxy_set_header   X-Real-IP		$remote_addr;
            proxy_pass http://localhost:3000;
        }

        location /queue/join {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;

            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        proxy_set_header   X-Real-IP		$remote_addr;
            proxy_pass http://localhost:3000;
        }

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

    # Oobabooga
    server {
        listen 7861;

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:7860;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

    # code-server
    server {
        listen 8081;

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:8080;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

    # vscode server
    server {
        listen 8001;

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:8000;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

    # Dockerless CLI FastAPI Server
    server {
        listen 7270; # "rp" in Hex ASCII

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:7271;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md{
            root /usr/share/nginx/html;
        }

        location @502 {
            add_header Cache-Control no-cache;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /readme.html break;
        }
    }

}

###

# # Define the expected Authorization header
# map $http_authorization $bearer_match {
#     default 0;
#     "Bearer ${OLLAMA_SECRET_API_KEY}" 1;
# }

# # Determine if authentication is required
# map $request_method$bearer_match $auth_required {
#     default 1;   # Require authentication by default
#     ~^OPTIONS0 0; # Allow OPTIONS requests without authentication
#     ~^.*1 0;     # Allow any method if bearer_match is 1
# }

# server {
#     listen 80;
#     server_name localhost;

#     # Return 401 for unauthorized requests
#     if ($auth_required) {
#         return 401;
#     }

#     location / {
#         # Handle preflight OPTIONS requests
#         if ($request_method = OPTIONS) {
#             # Add CORS headers for preflight request
#             add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
#             add_header 'Access-Control-Max-Age' 1728000;
#             return 204;
#         }

#         add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#         add_header 'Access-Control-Allow_Credentials' 'true' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

#         # Proxy the request to the local service
#         proxy_pass http://host.docker.internal:11434;
#         proxy_set_header Host $host;

#         proxy_connect_timeout       600;
#         proxy_send_timeout          600;
#         proxy_read_timeout          600;
#         send_timeout                600;

#         proxy_hide_header Access-Control-Allow-Origin;
#         proxy_hide_header Access-Control-Allow-Methods;
#         proxy_hide_header Access-Control-Allow-Headers;
#         proxy_hide_header Access-Control-Expose-Headers;
#     }
# }

# # vim: set syntax=nginx ft=nginx

